/// <reference types="react" />
import { WithEditorEvents, WithEditorState } from './types';
export interface StudioSelectFieldOptionProps {
    id: string;
    label: string;
    content?: React.ReactNode;
}
export interface StudioSelectFieldProps extends WithEditorEvents<StudioSelectFieldState> {
    className?: string;
    name?: string;
    required?: boolean;
    style?: React.CSSProperties;
    label?: React.ReactNode;
    value?: StudioSelectFieldOptionProps['id'];
    options: StudioSelectFieldOptionProps[];
    size?: 'l' | 'm' | 's' | 'xs' | 'x2s';
    emptyState?: string;
    onChange(props: {
        value: string;
    } & WithEditorState<StudioSelectFieldState>): void;
}
export interface StudioSelectFieldState extends Partial<Pick<StudioSelectFieldProps, 'className' | 'style' | 'label' | 'value' | 'options' | 'size' | 'emptyState' | 'required'>> {
}
export declare const StudioSelectField: import("react").NamedExoticComponent<StudioSelectFieldProps>;
export default StudioSelectField;
