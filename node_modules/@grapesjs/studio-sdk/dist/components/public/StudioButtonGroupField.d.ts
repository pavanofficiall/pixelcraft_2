/// <reference types="react" />
import { StudioIconProps } from './StudioIcon';
import { WithEditorEvents, WithEditorState } from './types';
export interface StudioButtonGroupFieldOptionProps {
    id: string;
    icon?: StudioIconProps['icon'];
    label?: React.ReactNode;
    title?: React.ReactNode;
}
export interface StudioButtonGroupFieldProps extends WithEditorEvents<StudioButtonGroupFieldState> {
    className?: string;
    label?: React.ReactNode;
    value: StudioButtonGroupFieldOptionProps['id'];
    options: StudioButtonGroupFieldOptionProps[];
    size?: 'm' | 's' | 'xs';
    disabled?: boolean;
    onChange(props: {
        value: string;
    } & WithEditorState<StudioButtonGroupFieldState>): void;
}
export interface StudioButtonGroupFieldState extends Partial<Pick<StudioButtonGroupFieldProps, 'className' | 'label' | 'value' | 'options' | 'size' | 'disabled'>> {
}
export declare const StudioButtonGroupField: import("react").NamedExoticComponent<StudioButtonGroupFieldProps>;
export default StudioButtonGroupField;
