import React from 'react';
import { ButtonProps } from '../Button';
export declare enum ToastVariant {
    Info = "info",
    Error = "error",
    Success = "success",
    Warning = "warning"
}
export interface IToast {
    id: string;
    uuid?: string;
    header: React.ReactNode;
    content?: React.ReactNode;
    variant?: ToastVariant;
    autoHideTimeout?: number;
    buttons?: (ButtonProps & {
        id: string;
    })[];
    onDismiss?: (id: string) => void;
}
export declare interface ToastProps extends Omit<React.HTMLProps<HTMLDivElement>, 'content'>, IToast {
    id: string;
}
export declare const Toast: React.ForwardRefExoticComponent<Omit<ToastProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
export default Toast;
export declare interface ToastContainerProps extends React.HTMLProps<HTMLDivElement> {
    toasts: IToast[];
    onDismiss: IToast['onDismiss'];
}
export declare const ToastContainer: React.MemoExoticComponent<React.ForwardRefExoticComponent<Omit<Omit<ToastContainerProps, "ref"> & React.RefAttributes<HTMLDivElement>, "ref"> & React.RefAttributes<HTMLDivElement>>>;
